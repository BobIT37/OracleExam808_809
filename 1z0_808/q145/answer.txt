[Question]

import java.util.ArrayList;

public class Test {
	
	public static void main(String[] args)
	{
		ArrayList myList = new ArrayList();
		String[] myArray;
		try
		{
			while(true)
			{
				myList.add("My String");
			}
		}
		catch(RuntimeException re)
		{
			System.out.println("Caught a RuntimeException");
		}
		catch(Exception e)
		{
			System.out.println("Caught an Exception");
		}
		System.out.println("Ready to use");
	}

}

What is the result?
A. Execution terminates in the first catch statement, and caught a RuntimeException is
printed to the console.
B. Execution terminates In the second catch statement, and caught an Exception is printed
to the console.
C. A runtime error is thrown in the thread "main".
D. Execution completes normally, and Ready to us© is printed to the console.
E. The code fails to compile because a throws keyword is required. 

[Answer]
C.

[Additional]
even the dump say C is the correct choice but I'm not sure about that.
I ran it on my labtop but it was working just fine.
at beginning the memory was raising then it stopped at some point but jvm still running.
so there is no OutOfMemory occur. instead, the cpu consuming is very high 95-98% so I stopped the test