Atomic is the property of an operation to be carried out as a single unit of execution
without any interference by another thread. A thread-safe atomic version of the increment
operator would be one that performed the read and write of the variable as a single
operation, not allowing any other threads to access the variable during the operation.

-Atomic Class
Class Name 		Description
AtomicBoolean 		A boolean value that may be updated atomically
AtomicInteger 		An int value that may be updated atomically
AtomicIntegerArray 		An int array in which elements may be updated atomically
AtomicLong 		A long value that may be updated atomically
AtomicLongArray 		A long array in which elements may be updated atomically
AtomicReference 		A generic object reference that may be updated atomically
AtomicReference		Array An array of generic object references in which elements may be
			updated atomically

-Common atomic methods
Class Name 		Description
get() 			Retrieve the current value
set() 			Set the given value, equivalent to the assignment = operator
getAndSet() 		Atomically sets the new value and returns the old value
incrementAndGet() 		For numeric classes, atomic pre-increment operation equivalent to ++value
getAndIncrement() 		For numeric classes, atomic post-increment operation equivalent to value++
decrementAndGet()    	For numeric classes, atomic pre-decrement operation equivalent to --value
getAndDecrement() 		For numeric classes, atomic post-decrement operation equivalent to value--